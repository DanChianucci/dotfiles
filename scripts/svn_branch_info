#!/bin/bash



function svn_parse_rooturl() {
    local rev
    root="$(svn --non-interactive info --no-newline --show-item repos-root-url 2>/dev/null)"
    if [ "${root}" != "" ] ; then
        echo "$root"
        return 0
    fi
    return 1
}

function svn_parse_reponame() {
    root="$(svn --non-interactive info --no-newline --show-item repos-root-url 2>/dev/null)"|| return 1

    if [ -z ${SVN_ROOT+x} ]; then
        repo=$(basename "$root")
    else
        repo=${root#"$SVN_ROOT"}
    fi

    echo "$repo"
    return 0
}

function svn_parse_subrepo() {
    url="$(svn --non-interactive info --no-newline --show-item relative-url 2>/dev/null)" || return 1
    echo "${url}" | sed -n 's/\(\/\(branches\|tags\|releases\|trunk\)\/.*\)//p' | cut -f2 -d'/'
    return 0
}

# Returns the current branch or tag name from the given `svn info` output
function svn_parse_branch() {
    local chunk url
    url="$(svn --non-interactive info --no-newline --show-item relative-url 2>/dev/null)"
    if [ "${url}" != "" ]; then
        declare -A match_types
        match_types["us"]="branches\/user\(_branches\)\?"
        match_types["pr"]="branches\/project\(_branches\)\?"
        match_types["fe"]="branches\/feature\(_branches\)\?"
        match_types["br"]="branches"
        match_types["rl"]="releases"
        match_types["tg"]="tags"

        for matchtype in us pr fe br rl tg ; do
            ptrn=${match_types["$matchtype"]}
            chunk="$(echo "${url}/" | sed -n "s/.*\b${ptrn}\/\b//p" | grep -E -o '^[^/]+')"
            [ -n "$chunk" ] && echo "${matchtype}:${chunk}" && return 0
        done

        chunk="$(echo "${url}" | sed -n 's/trunk//p' | grep -E -o '^[^/]+')"
        [ -n "$chunk" ] && echo "trunk" && return 0

        echo "$url" && return 0
    fi
    return 1
}

function svn_parse_rev() {
    svn --non-interactive info --no-newline --show-item revision
    return $?
}

function svn_parse_branchrev() {
    local branch
    local rev
    branch=$(svn_parse_branch)
    rev=$(svn_parse_rev)
    echo "${branch} @ ${rev}"
}

function svn_is_repo(){
  svn --non-interactive info --depth empty >/dev/null 2>&1
  return $?
}

usage() {
  echo "Usage: svn_branch_info [ -u | --root ] [ -n | --name ]
                               [ -s | --subrepo ] [ -b | --branch]
                               [ -r | --rev] [-f | --branchrev]"
}






PARSED_ARGUMENTS=$(getopt -o unsbrfh --long root,name,subrepo,branch,rev,branchrev -- "$@")
VALID_ARGS=$?
if [[ $VALID_ARGS -ne 0 ]]; then
    exit 1;
fi

eval set -- "$PARSED_ARGUMENTS"
while :
do
  case "$1" in
    -u | --root)     svn_parse_rooturl  ; exit $? ;;
    -n | --name)     svn_parse_reponame ; exit $? ;;
    -s | --subrepo)  svn_parse_subrepo  ; exit $? ;;
    -b | --branch)   svn_parse_branch   ; exit $? ;;
    -r | --rev )     svn_parse_rev      ; exit $? ;;
    -f | --branchrev ) svn_parse_branchrev; exit $? ;;
    --) svn_is_repo; exit $?;;
    -h) usage; exit 0;;
    *)  usage; exit 2;;
  esac
done
